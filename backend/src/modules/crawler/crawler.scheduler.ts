// src/modules/crawler/crawler.scheduler.ts
import { Injectable, Logger } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { CrawlerService } from './crawler.service';

@Injectable()
export class CrawlerScheduler {
  private readonly logger = new Logger(CrawlerScheduler.name);

  constructor(private readonly crawlerService: CrawlerService) {}

  // üïõ T·ª± ƒë·ªông ch·∫°y m·ªói ng√†y l√∫c 00:00
  @Cron(CronExpression.EVERY_DAY_AT_MIDNIGHT)
  async handleMidnightCrawl() {
    this.logger.log(
      'üåô Cronjob 00:00: B·∫Øt ƒë·∫ßu crawl truy·ªán m·ªõi ho·∫∑c ch∆∞a ho√†n t·∫•t...',
    );

    const sources = ['tangthuvien', 'vtruyen'];

    for (const source of sources) {
      try {
        this.logger.log(`üöÄ ƒêang x·ª≠ l√Ω ngu·ªìn: ${source}`);
        await this.crawlerService.crawlNewStoriesOnly(source);
      } catch (err) {
        this.logger.error(`‚ùå L·ªói khi crawl ${source}: ${err.message}`);
      }
    }

    this.logger.log('‚úÖ Cronjob crawl truy·ªán m·ªõi ho√†n t·∫•t.');
  }
}
